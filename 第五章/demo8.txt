package chapter5;

//字符串的调整与替换
public class demo10 {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		char[] arr = {'a',' ','b',0,0,0,0,0};
		replace(arr);
		for(int i=0;i<arr.length;i++){
			System.out.print(arr[i]+"");
		}
		System.out.println();
		char[] arr1 = {'*','c','b','*','d','v','*'};
		modify(arr1);
		for(int i=0;i<arr1.length;i++){
			System.out.print(arr1[i]);
		}
	}

	//用StringBuilder也可以去处理
	public static void replace(char[] arr){
		if(arr==null || arr.length==0){
			return ;
		}
		int len = 0;       //左半区不为空格的个数
		int num = 0;       //左半区空格的个数
		//找出新的字符串的长度
		for(int i=0;i<arr.length&&arr[i]!=0;i++){
			if(arr[i]==' '){
				num++;
			}
			else{
				len++;
			}
		}
		//从后面往前面复制
		int j = len+num+num*2-1;
		for(int i= num+len-1;i>=0;i--){
			if(arr[i]!=' '){
				arr[j--] = arr[i];
			}
			else{
				arr[j--] = '0';
				arr[j--] = '2';
				arr[j--] = '%';
			}
		}
	}

	//*的问题，把*全部挪到左边
	public static void modify(char[] arr){
		if(arr==null || arr.length==0){
			return;
		}
		int j = arr.length-1;
		for(int i=arr.length-1;i>=0;i--){
			if(arr[i]!='*'){
				arr[j--] = arr[i];
			}
		}
		while(j>=0){
			arr[j--] ='*';
		}
	}
	
}
